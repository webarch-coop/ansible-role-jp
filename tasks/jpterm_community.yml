# Copyright 2022-2025 Chris Croome
#
# This file is part of the Webarchitects JMESPath Ansible role.
#
# The Webarchitects Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects JMESPath Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: JMESPath Terminal Community Edition
  block:

    - name: Check that jp_term_community_version is defined
      ansible.builtin.assert:
        that:
          - jp_term_community_version is defined
          - jp_term_community_version is ansible.builtin.version('0.1.0', '>=')
        quiet: "{% if ansible_check_mode or ansible_verbosity >= 1 %}false{% else %}true{% endif %}"

    # TODO switch to use community.general.pip_package_info module
    - name: Check the system PyPI packages
      ansible.builtin.command: python3 -m pip list --format=json
      check_mode: false
      changed_when: false
      register: jp_pip_system_list

    - name: Set a fact for the system PyPI packages present
      ansible.builtin.set_fact:
        jp_pip_system_existing: "{{ jp_pip_system_list.stdout | ansible.builtin.from_json }}"

    - name: Debug system PyPI packages present
      ansible.builtin.debug:
        var: jp_pip_system_existing
        verbosity: 2

    - name: Please manually remove the pip installed jmespath-terminal system package
      ansible.builtin.fail:
        msg: "sudo pip uninstall {{ jp_pypi_pkg }} --break-system-packages"
      vars:
        jp_pypi_pkg: jmespath-terminal
      when:
        - jp_pip_system_existing != []
        - jp_pip_system_existing | community.general.json_query(jp_pypi_jmespath_query) is defined
        - jp_pip_system_existing | community.general.json_query(jp_pypi_jmespath_query) != []
        - jp_pip_system_existing | community.general.json_query(jp_pypi_version_jmespath_query) is ansible.builtin.version('0.0.1', '>')

    - name: Please manually remove the pip installed setuptools system package
      ansible.builtin.fail:
        msg: "sudo pip uninstall {{ jp_pypi_pkg }} --break-system-packages"
      vars:
        jp_pypi_pkg: setuptools
      when:
        - jp_pip_system_existing != []
        - jp_pip_system_existing | community.general.json_query(jp_pypi_jmespath_query) is defined
        - jp_pip_system_existing | community.general.json_query(jp_pypi_jmespath_query) != []
        - jp_pip_system_existing | community.general.json_query(jp_pypi_version_jmespath_query) == "57.0.0"

    # TODO switch to use community.general.pip_package_info module
    - name: Check the user PyPI packages
      ansible.builtin.command: python3 -m pip list --user --format=json
      check_mode: false
      changed_when: false
      register: jp_pip_user_list

    - name: Set a fact for the user PyPI packages present
      ansible.builtin.set_fact:
        jp_pip_user_existing: "{{ jp_pip_user_list.stdout | ansible.builtin.from_json }}"

    - name: Debug user PyPI packages present
      ansible.builtin.debug:
        var: jp_pip_user_existing
        verbosity: 2

    - name: Please manually remove the pip installed jmespath-terminal user package
      ansible.builtin.fail:
        msg: "sudo pip uninstall {{ jp_pypi_pkg }} --break-system-packages"
      vars:
        jp_pypi_pkg: jmespath-terminal
      when:
        - jp_pip_user_existing != []
        - jp_pip_user_existing | community.general.json_query(jp_pypi_jmespath_query) is defined
        - jp_pip_user_existing | community.general.json_query(jp_pypi_jmespath_query) != []
        - jp_pip_user_existing | community.general.json_query(jp_pypi_version_jmespath_query) is ansible.builtin.version('0.0.1', '>')

    - name: Please manually remove the pip installed setuptools user package
      ansible.builtin.fail:
        msg: "sudo pip uninstall {{ jp_pypi_pkg }} --break-system-packages"
      vars:
        jp_pypi_pkg: setuptools
      when:
        - jp_pip_user_existing != []
        - jp_pip_user_existing | community.general.json_query(jp_pypi_jmespath_query) is defined
        - jp_pip_user_existing | community.general.json_query(jp_pypi_jmespath_query) != []
        - jp_pip_user_existing | community.general.json_query(jp_pypi_version_jmespath_query) == "57.0.0"

    - name: Install jpterm using pipx as root
      community.general.pipx:
        name: jmespath-community-terminal
        source: "git+https://github.com/jmespath-community/jmespath.terminal.git@{{ jp_term_community_version }}"
        install_deps: true
        state: present
        executable: /usr/bin/pipx
      environment: "{{ jp_root_pipx_env }}"
      when: ansible_facts.effective_user_id == 0

    - name: Symlink jpterm for root
      block:

        - name: Check that jpterm exists at /opt/venvs/jmespath-community-terminal/bin/jpterm
          ansible.builtin.stat:
            path: /opt/venvs/jmespath-community-terminal/bin/jpterm
          register: jp_root_pipx_path

        - name: Symlink for jpterm present
          ansible.builtin.file:
            state: link
            dest: /opt/venvs/jmespath-community-terminal/bin/jpterm
            src: "{{ jp_root_pipx_env.PIPX_BIN_DIR }}/jpterm"
            follow: false
            mode: "0777"
            owner: root
            group: root
          when: jp_root_pipx_path.stat.exists | bool

      when: ansible_facts.effective_user_id == 0

    - name: Install jpterm using pipx as a regular user
      community.general.pipx:
        name: jmespath-community-terminal
        source: "git+https://github.com/jmespath-community/jmespath.terminal.git@{{ jp_term_community_version }}"
        install_deps: true
        state: present
        executable: /usr/bin/pipx
      environment: "{{ jp_user_pipx_env }}"
      when: ansible_facts.effective_user_id != 0

  when: jp_term | bool
  tags:
    - jp
...
